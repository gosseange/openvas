---
- name: D√©finir les variables d'environnement comme facts
  set_fact:
    pg_gvm_version: "22.6.7"
    source_dir: "/opt/source"
    build_dir: "/opt/build"
    install_dir: "/opt/install"
    install_prefix: "/opt/install"

- name: Installer les d√©pendances pour pg-gvm
  apt:
    name:
      - libglib2.0-dev
      - libical-dev
      - postgresql-server-dev-all
    state: present
    update_cache: yes
  become: yes

- name: Cr√©er le dossier source s‚Äôil n‚Äôexiste pas
  file:
    path: "{{ source_dir }}"
    state: directory
  when: source_dir is defined and source_dir != ''

- name: Cr√©er le dossier build pour pg-gvm
  file:
    path: "{{ build_dir }}/pg-gvm"
    state: directory

- name: T√©l√©charger l‚Äôarchive pg-gvm
  get_url:
    url: "https://github.com/greenbone/pg-gvm/archive/refs/tags/v{{ pg_gvm_version }}.tar.gz"
    dest: "{{ source_dir }}/pg-gvm-{{ pg_gvm_version }}.tar.gz"
    mode: "0644"

- name: T√©l√©charger le fichier de signature pg-gvm-{{ pg_gvm_version }}.tar.gz.asc s'il n'existe pas
  get_url:
    url: "https://github.com/greenbone/pg-gvm/releases/download/v{{ pg_gvm_version }}/pg-gvm-{{ pg_gvm_version }}.tar.gz.asc"
    dest: "{{ source_dir }}/pg-gvm-{{ pg_gvm_version }}.tar.gz.asc"
    mode: '0644'
  when: not lookup('ansible.builtin.file', source_dir + '/pg-gvm-' + pg_gvm_version + '.tar.gz.asc', errors='ignore')

- name: V√©rifier la signature de l‚Äôarchive
  shell: |
    gpg --verify {{ source_dir }}/pg-gvm-{{ pg_gvm_version }}.tar.gz.asc {{ source_dir }}/pg-gvm-{{ pg_gvm_version }}.tar.gz
  register: gpg_verify_output
  failed_when: "'Good signature' not in gpg_verify_output.stderr"
  changed_when: false

- name: Extraire les sources de pg-gvm
  unarchive:
    src: "{{ source_dir }}/pg-gvm-{{ pg_gvm_version }}.tar.gz"
    dest: "{{ source_dir }}"
    remote_src: yes
    creates: "{{ source_dir }}/pg-gvm-{{ pg_gvm_version }}"

- name: Cr√©er le dossier build pour pg-gvm
  file:
    path: "{{ build_dir }}/pg-gvm"
    state: directory

- name: üîç Debug - Afficher les variables
  debug:
    msg:
      - "pg_gvm_version={{ pg_gvm_version }}"
      - "source_dir={{ source_dir }}"
      - "build_dir={{ build_dir }}"
      - "install_prefix={{ install_prefix }}"

- name: Configurer pg-gvm avec CMake
  command: >
    cmake {{ source_dir }}/pg-gvm-{{ pg_gvm_version }}
    -DCMAKE_INSTALL_PREFIX={{ install_dir }}
    -DCMAKE_BUILD_TYPE=Release
  environment:
    PKG_CONFIG_PATH: "{{install_prefix }}/lib/pkgconfig"
  args:
    chdir: "{{ build_dir }}/pg-gvm"

- name: Compiler pg-gvm
  command: cmake --build . -j"{{ ansible_processor_cores | default(2) }}"
  args:
    chdir: "{{ build_dir }}/pg-gvm"

- name: Installer pg-gvm directement dans le dossier cible
  command: make install
  args:
    chdir: "{{ build_dir }}/pg-gvm"
  become: yes

- name: Copier les fichiers install√©s vers le dossier final
  command: cp -rv {{ install_dir }}/pg-gvm/* /
  become: yes

